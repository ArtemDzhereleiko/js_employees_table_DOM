{"version":3,"sources":["scripts/main.js"],"names":["click","selected","table","document","querySelector","tableHead","tableBody","direction","addEventListener","e","tableCeil","sorted","target","columnforSort","cellIndex","getString","value","children","innerText","getSalary","slice","split","join","callbackForNumbers","a","b","rows","sort","callbackForString","localeCompare","forEach","item","append","closest","classList","remove","add","insertAdjacentHTML","form","employeeNameInput","employeePositionInput","employeeOfficeInput","employeeAgeInput","employeeSalaryInput","makeNotification","type","message","notification","createElement","title","dataset","qa","numberWithCommas","number","toString","replace","addToTable","employeeName","position","office","age","salary","tableRow","validSalary","preventDefault","length","body","setTimeout","inputCell","information","style","width","window","getComputedStyle","focus","ev","key","blur"],"mappings":"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","file":"main.6ef90a64.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nlet click;\nlet direction = true;\nlet selected;\n\ntableHead.addEventListener('click', e => {\n  const tableCeil = e.target;\n  const columnforSort = tableCeil.cellIndex;\n  let sorted;\n\n  if (click === tableCeil) {\n    direction = !direction;\n  } else {\n    direction = true;\n    click = tableCeil;\n  }\n\n  function getString(value) {\n    return value.children[columnforSort].innerText;\n  }\n\n  function getSalary(value) {\n    return getString(value).slice(1).split(',').join('');\n  }\n\n  function callbackForString(a, b) {\n    return direction\n      ? a.localeCompare(b)\n      : b.localeCompare(a);\n  }\n\n  function callbackForNumbers(a, b) {\n    return direction\n      ? +a - +b\n      : +b - +a;\n  }\n\n  switch (tableCeil.innerText) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      sorted = [...tableBody.rows].sort(\n        (a, b) => callbackForString(getString(a), getString(b))\n      );\n      break;\n\n    case 'Age':\n      sorted = [...tableBody.rows].sort(\n        (a, b) => callbackForNumbers(getString(a), getString(b))\n      );\n      break;\n\n    case 'Salary':\n      sorted = [...tableBody.rows].sort(\n        (a, b) => callbackForNumbers(getSalary(a), getSalary(b))\n      );\n      break;\n  }\n\n  sorted.forEach(item => tableBody.append(item));\n});\n\ntableBody.addEventListener('click', e => {\n  const item = e.target.closest('tr');\n\n  if (!selected) {\n    selected = item;\n    selected.classList.add('active');\n  } else if (selected !== item) {\n    selected.classList.remove('active');\n    selected = item;\n    selected.classList.add('active');\n  } else {\n    selected.classList.remove('active');\n  }\n});\n\ntable.insertAdjacentHTML('afterend', `\n  <form\n    class= \"new-employee-form\"\n    action= \"/\"\n    method= \"POST\"\n  >\n    <label>\n    Name:\n      <input\n        name=\"name\"\n        type=\"text\"\n        data-qa=\"name\"\n      >\n    </label>\n\n    <label>\n    Position:\n      <input\n        name=\"position\"\n        type=\"text\"\n        data-qa=\"position\"\n      >\n    </label>    \n    \n    <label>\n    Office:\n      <select\n        name=\"office\"\n        data-qa=\"office\"\n      >\n        <option\n          value=\"\"\n          selected\n          disabled\n        >Choose:</option>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n\n    <label>\n    Age:\n      <input\n        name=\"age\"\n        type=\"number\"\n        data-qa=\"age\"\n      >\n    </label>\n\n    <label>\n    Salary:\n      <input\n        name=\"number\"\n        type=\"text\"\n        data-qa=\"salary\"\n      >\n    </label>\n    <button class=\"sbumit-employee-form\" type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst form = document.querySelector('.new-employee-form');\nconst employeeNameInput = document.querySelector('[data-qa = \"name\"]');\nconst employeePositionInput = document.querySelector('[data-qa = \"position\"]');\nconst employeeOfficeInput = document.querySelector('[data-qa = \"office\"]');\nconst employeeAgeInput = document.querySelector('[data-qa = \"age\"]');\nconst employeeSalaryInput = document.querySelector('[data-qa = \"salary\"]');\n\nfunction makeNotification(type, message) {\n  const notification = document.createElement('div');\n  const title = type[0] + type.slice(1);\n\n  notification.classList.add('notification');\n  notification.dataset.qa = 'notification';\n\n  notification.classList.add(type);\n\n  notification.insertAdjacentHTML('beforeend', `\n    <h2>${title}</h2>\n    <p>${message}</p>\n  `);\n\n  return notification;\n};\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  if (employeeNameInput.value.length < 4) {\n    document.body.append(\n      makeNotification('error', 'Name is less than 4 letters!')\n    );\n  } else if (employeeAgeInput.value < 18 || employeeAgeInput.value > 90) {\n    document.body.append(\n      makeNotification('error', 'Age is less than 18 or more than 90!')\n    );\n  } else if (\n    !employeeNameInput.value\n    || !employeePositionInput.value\n    || !employeeOfficeInput.value\n    || !employeeAgeInput.value\n    || !employeeSalaryInput.value\n  ) {\n    document.body.append(\n      makeNotification('error', 'You have to fill all fields in the form!')\n    );\n  } else {\n    tableBody.append(\n      addToTable(\n        employeeNameInput.value,\n        employeePositionInput.value,\n        employeeOfficeInput.value,\n        employeeAgeInput.value,\n        employeeSalaryInput.value\n      )\n    );\n\n    document.body.append(\n      makeNotification(\n        'success',\n        'Information was successfully added to table!'\n      )\n    );\n    employeeNameInput.value = '';\n    employeePositionInput.value = '';\n    employeeOfficeInput.value = '';\n    employeeAgeInput.value = '';\n    employeeSalaryInput.value = '';\n  }\n\n  setTimeout(() => {\n    document.querySelector('.notification').remove();\n  }, 2000);\n});\n\nfunction numberWithCommas(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nfunction addToTable(employeeName, position, office, age, salary) {\n  const tableRow = document.createElement('tr');\n  const validSalary = `$${numberWithCommas(salary)}`;\n\n  tableRow.insertAdjacentHTML('beforeend', `\n    <td>${employeeName}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>${validSalary}</td>\n  `);\n\n  return tableRow;\n};\n\nconst inputCell = document.createElement('input');\n\ninputCell.classList.add('cell-input');\n\ntableBody.addEventListener('dblclick', e => {\n  const item = e.target;\n  const information = item.innerText;\n\n  inputCell.style.width = window.getComputedStyle(item).width;\n\n  setTimeout(() => {\n    inputCell.focus();\n  }, 20);\n\n  item.innerText = '';\n  item.append(inputCell);\n  inputCell.value = information;\n\n  inputCell.addEventListener('blur', () => {\n    if (inputCell.value.length > 0) {\n      inputCell.remove();\n      item.innerText = inputCell.value;\n    } else {\n      inputCell.remove();\n      item.innerText = information;\n    }\n  });\n\n  inputCell.addEventListener('keydown', ev => {\n    if (ev.key === 'Enter') {\n      inputCell.blur();\n    }\n  });\n});\n"]}